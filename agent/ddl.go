package provision

// auto generated 2018-10-01 13:44:22.447273386 +0200 CEST m=+0.001563153

import (
	"encoding/base64"
	"encoding/json"

	addl "github.com/choria-io/mcorpc-agent-provider/mcorpc/ddl/agent"
)

var provddl = `ewogICIkc2NoZW1hIjogImh0dHBzOi8vY2hvcmlhLmlvL3NjaGVtYXMvbWNvcnBjL2RkbC92MS9hZ2VudC5qc29uIiwKICAibWV0YWRhdGEiOiB7CiAgICAibmFtZSI6ICJjaG9yaWFfcHJvdmlzaW9uIiwKICAgICJkZXNjcmlwdGlvbiI6ICJDaG9yaWEgUHJvdmlzaW9uZXIiLAogICAgImF1dGhvciI6ICJSLkkuUGllbmFhciA8cmlwQGRldmNvLm5ldD4iLAogICAgImxpY2Vuc2UiOiAiQXBhY2hlLTIuMCIsCiAgICAidmVyc2lvbiI6ICIwLjAuMSIsCiAgICAidXJsIjogImh0dHBzOi8vY2hvcmlhLmlvIiwKICAgICJ0aW1lb3V0IjogMgogIH0sCiAgImFjdGlvbnMiOiBbCiAgICB7CiAgICAgICJhY3Rpb24iOiAiY29uZmlndXJlIiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAicHJvbXB0IjogIkNvbmZpZ3VyYXRpb24iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjb25maWd1cmF0aW9uIHRvIGFwcGx5IHRvIHRoaXMgbm9kZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogZmFsc2UsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeey4rfSQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDIwNDgKICAgICAgICB9LAogICAgICAgICJjZXJ0aWZpY2F0ZSI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ2VydGlmaWNhdGUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBFTSB0ZXh0IGJsb2NrIGZvciB0aGUgY2VydGlmaWNhdGUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMDI0MAogICAgICAgIH0sCiAgICAgICAgImNhIjogewogICAgICAgICAgInByb21wdCI6ICJDQSBCdW5kbGUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBFTSB0ZXh0IGJsb2NrIGZvciB0aGUgQ0EiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMDI0MAogICAgICAgIH0sCiAgICAgICAgInNzbGRpciI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiU1NMIERpciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGlyZWN0b3J5IGZvciBzdG9yaW5nIHRoZSBjZXJ0aWZpY2F0ZSBpbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDUwMAogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdGF0dXMgbWVzc2FnZSBmcm9tIHRoZSBQcm92aXNpb25lciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJNZXNzYWdlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiZmFpbGVkIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkNvbmZpZ3VyZSB0aGUgQ2hvcmlhIFNlcnZlciIKICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAiZ2VuY3NyIiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9LAogICAgICAgICJjbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ29tbW9uIE5hbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjZXJ0aWZpY2F0ZSBDb21tb24gTmFtZSB0byBwbGFjZSBpbiB0aGUgQ1NSIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXigoW2EtekEtWjAtOV18W2EtekEtWjAtOV1bYS16QS1aMC05LV0qW2EtekEtWjAtOV0pLikqKFtBLVphLXowLTldfFtBLVphLXowLTldW0EtWmEtejAtOS1dKltBLVphLXowLTldKSQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDgwCiAgICAgICAgfSwKICAgICAgICAiQyI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiQ291bnRyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ291bnRyeSBDb2RlIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltBLVpdezJ9JCIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogMgogICAgICAgIH0sCiAgICAgICAgIkwiOiB7CiAgICAgICAgICAicHJvbXB0IjogIkxvY2FsaXR5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMb2NhbGl0eSBvciBtdW5pY2lwYWxpdHkgKHN1Y2ggYXMgY2l0eSBvciB0b3duIG5hbWUpIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIk8iOiB7CiAgICAgICAgICAicHJvbXB0IjogIk9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiT3JnYW5pemF0aW9uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIk9VIjogewogICAgICAgICAgInByb21wdCI6ICJPcmdhbml6YXRpb25hbCBVbml0IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJPcmdhbml6YXRpb25hbCBVbml0IiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXltcXHdcXHMtXSskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0sCiAgICAgICAgIlNUIjogewogICAgICAgICAgInByb21wdCI6ICJTdGF0ZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiU3RhdGUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeW1xcd1xccy1dKyQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDUwCiAgICAgICAgfQogICAgICB9LAogICAgICAib3V0cHV0IjogewogICAgICAgICJjc3IiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUEVNIHRleHQgYmxvY2sgZm9yIHRoZSBDU1IiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiQ1NSIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInNzbGRpciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTU0wgZGlyZWN0b3J5IGFzIGRldGVybWluZWQgYnkgdGhlIHNlcnZlciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJTU0wgRGlyIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlJlcXVlc3QgYSBDU1IgZnJvbSB0aGUgQ2hvcmlhIFNlcnZlciIKICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAicmVsZWFzZV91cGRhdGUiLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgInRva2VuIjogewogICAgICAgICAgInByb21wdCI6ICJUb2tlbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQXV0aGVudGljYXRpb24gdG9rZW4gdG8gcGFzcyB0byB0aGUgc2VydmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDEyOAogICAgICAgIH0sCiAgICAgICAgInJlcG9zaXRvcnkiOiB7CiAgICAgICAgICAicHJvbXB0IjogIlJlcG9zaXRvcnkgVVJMIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQKFMpIHNlcnZlciBob3N0aW5nIHRoZSB1cGRhdGUgcmVwb3NpdG9yeSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IGZhbHNlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXmh0dHAocyopOi8vIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAiNTEyIgogICAgICAgIH0sCiAgICAgICAgInZlcnNpb24iOiB7CiAgICAgICAgICAicHJvbXB0IjogIlZlcnNpb24gdG8gdXBkYXRlIHRvIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJQYWNrYWdlIHZlcnNpb24gdG8gdXBkYXRlIHRvIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiLAogICAgICAgICAgIm9wdGlvbmFsIjogZmFsc2UsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuKyIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogIjMyIgogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdGF0dXMgbWVzc2FnZSBmcm9tIHRoZSBQcm92aXNpb25lciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJNZXNzYWdlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlBlcmZvcm1zIGFuIGluLXBsYWNlIGJpbmFyeSB1cGRhdGUgYW5kIHJlc3RhcnRzIENob3JpYSIKICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAicmVwcm92aXNpb24iLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgInRva2VuIjogewogICAgICAgICAgInByb21wdCI6ICJUb2tlbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQXV0aGVudGljYXRpb24gdG9rZW4gdG8gcGFzcyB0byB0aGUgc2VydmVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVmYXVsdCI6ICIiLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIi4iLAogICAgICAgICAgIm1heGxlbmd0aCI6IDEyOAogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJTdGF0dXMgbWVzc2FnZSBmcm9tIHRoZSBQcm92aXNpb25lciIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJNZXNzYWdlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlJlZW5hYmxlIHByb3Zpc2lvbiBtb2RlIGluIGEgcnVubmluZyBDaG9yaWEgU2VydmVyIgogICAgfSwKICAgIHsKICAgICAgImFjdGlvbiI6ICJyZXN0YXJ0IiwKICAgICAgImlucHV0IjogewogICAgICAgICJ0b2tlbiI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiVG9rZW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHBhc3MgdG8gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiAiIiwKICAgICAgICAgICJvcHRpb25hbCI6IHRydWUsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICIuIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAxMjgKICAgICAgICB9LAogICAgICAgICJzcGxheSI6IHsKICAgICAgICAgICJwcm9tcHQiOiAiU3BsYXkgdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbmZpZ3VyYXRpb24gdG8gYXBwbHkgdG8gdGhpcyBub2RlIiwKICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwsCiAgICAgICAgICAib3B0aW9uYWwiOiB0cnVlCiAgICAgICAgfQogICAgICB9LAogICAgICAib3V0cHV0IjogewogICAgICAgICJtZXNzYWdlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlN0YXR1cyBtZXNzYWdlIGZyb20gdGhlIFByb3Zpc2lvbmVyIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIk1lc3NhZ2UiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJmYWlsZWQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVzdGFydCB0aGUgQ2hvcmlhIFNlcnZlciIKICAgIH0KICBdCn0K`
var rpcuddl = ``

// DDL is the agent DDL
var DDL = make(map[string]*addl.DDL)

func init() {
	DDL["choria_provision"] = &addl.DDL{}
	DDL["rpcutil"] = &addl.DDL{}

	ddl, _ := base64.StdEncoding.DecodeString(provddl)
	json.Unmarshal(ddl, DDL["choria_provision"])

	ddl, _ = base64.StdEncoding.DecodeString(rpcuddl)
	json.Unmarshal(ddl, DDL["rpcutil"])
}
