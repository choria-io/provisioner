package provision

// auto generated 2018-08-08 13:16:13.461870467 +0000 UTC m=+0.003788096

import (
	"encoding/base64"
	"encoding/json"

	addl "github.com/choria-io/mcorpc-agent-provider/mcorpc/ddl/agent"
)

var provddl = ``
var rpcuddl = ``

// DDL is the agent DDL
var DDL = make(map[string]*addl.DDL)

func init() {
	DDL["choria_provision"] = &addl.DDL{}
	DDL["rpcutil"] = &addl.DDL{}

	ddl, _ := base64.StdEncoding.DecodeString(provddl)
	json.Unmarshal(ddl, DDL["choria_provision"])

	ddl, _ = base64.StdEncoding.DecodeString(rpcuddl)
	json.Unmarshal(ddl, DDL["rpcutil"])
}
