package provision

// auto generated 2018-08-09 08:11:51.530618177 +0200 CEST m=+0.000797138

import (
	"encoding/base64"
	"encoding/json"

	addl "github.com/choria-io/mcorpc-agent-provider/mcorpc/ddl/agent"
)

var provddl = ``
var rpcuddl = `ewogICIkc2NoZW1hIjogImh0dHBzOi8vY2hvcmlhLmlvL3NjaGVtYXMvbWNvcnBjL2RkbC92MS9hZ2VudC5qc29uIiwKICAibWV0YWRhdGEiOiB7CiAgICAibmFtZSI6ICJycGN1dGlsIiwKICAgICJkZXNjcmlwdGlvbiI6ICJHZW5lcmFsIGhlbHBmdWwgYWN0aW9ucyB0aGF0IGV4cG9zZSBzdGF0cyBhbmQgaW50ZXJuYWxzIHRvIFNpbXBsZVJQQyBjbGllbnRzIiwKICAgICJhdXRob3IiOiAiUi5JLlBpZW5hYXIgPHJpcEBkZXZjby5uZXQ+IiwKICAgICJsaWNlbnNlIjogIkFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCIsCiAgICAidmVyc2lvbiI6ICIxLjAiLAogICAgInVybCI6ICJodHRwczovL2RvY3MucHVwcGV0bGFicy5jb20vbWNvbGxlY3RpdmUvIiwKICAgICJ0aW1lb3V0IjogMTAKICB9LAogICJhY3Rpb25zIjogWwogICAgewogICAgICAiYWN0aW9uIjogImFnZW50X2ludmVudG9yeSIsCiAgICAgICJpbnB1dCI6IHsKICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAiYWdlbnRzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgYWdlbnRzIG9uIHRoZSBzZXJ2ZXIiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiQWdlbnRzIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkludmVudG9yeSBvZiBhbGwgYWdlbnRzIG9uIHRoZSBzZXJ2ZXIiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogImNvbGxlY3RpdmVfaW5mbyIsCiAgICAgICJpbnB1dCI6IHsKICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAibWFpbl9jb2xsZWN0aXZlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYWluIENvbGxlY3RpdmUiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiTWFpbiBDb2xsZWN0aXZlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgImNvbGxlY3RpdmVzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkFsbCBDb2xsZWN0aXZlcyIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJBbGwgQ29sbGVjdGl2ZXMiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiSW5mbyBhYm91dCB0aGUgbWFpbiBhbmQgc3ViIGNvbGxlY3RpdmVzIiwKICAgICAgImFnZ3JlZ2F0ZSI6IFsKICAgICAgICB7CiAgICAgICAgICAiZnVuY3Rpb24iOiAic3VtbWFyeSIsCiAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgImNvbGxlY3RpdmVzIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImFjdGlvbiI6ICJkYWVtb25fc3RhdHMiLAogICAgICAiaW5wdXQiOiB7CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgInRocmVhZHMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTGlzdCBvZiB0aHJlYWRzIGFjdGl2ZSBpbiB0aGUgZGFlbW9uIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlRocmVhZHMiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAiYWdlbnRzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgYWdlbnRzIGxvYWRlZCIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJBZ2VudHMiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAicGlkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb2Nlc3MgSUQgb2YgdGhlIGRhZW1vbiIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJQSUQiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAidGltZXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUHJvY2Vzc29yIHRpbWUgY29uc3VtZWQgYnkgdGhlIGRhZW1vbiIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJUaW1lcyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9LAogICAgICAgICJ2YWxpZGF0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTWVzc2FnZXMgdGhhdCBwYXNzZWQgc2VjdXJpdHkgdmFsaWRhdGlvbiIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJTZWN1cml0eSBWYWxpZGF0ZWQiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAidW52YWxpZGF0ZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTWVzc2FnZXMgdGhhdCBmYWlsZWQgc2VjdXJpdHkgdmFsaWRhdGlvbiIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJGYWlsZWQgU2VjdXJpdHkiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAicGFzc2VkIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBhc3NlZCBmaWx0ZXIgY2hlY2tzIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlBhc3NlZCBGaWx0ZXIiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAiZmlsdGVyZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGlkbid0IHBhc3MgZmlsdGVyIGNoZWNrcyIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJGYWlsZWQgRmlsdGVyIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInN0YXJ0dGltZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lIHRoZSBzZXJ2ZXIgc3RhcnRlZCIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJTdGFydCBUaW1lIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInRvdGFsIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRvdGFsIG1lc3NhZ2VzIHJlY2VpdmVkIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlRvdGFsIE1lc3NhZ2VzIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInJlcGxpZXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiUmVwbGllcyBzZW50IGJhY2sgdG8gY2xpZW50cyIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJSZXBsaWVzIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgImNvbmZpZ2ZpbGUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQ29uZmlnIGZpbGUgdXNlZCB0byBzdGFydCB0aGUgZGFlbW9uIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIkNvbmZpZyBGaWxlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInZlcnNpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTUNvbGxlY3RpdmUgVmVyc2lvbiIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJWZXJzaW9uIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgInR0bGV4cGlyZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTWVzc2FnZXMgdGhhdCBkaWQgcGFzcyBUVEwgY2hlY2tzIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlRUTCBFeHBpcmVkIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkdldCBzdGF0aXN0aWNzIGZyb20gdGhlIHJ1bm5pbmcgZGFlbW9uIiwKICAgICAgImFnZ3JlZ2F0ZSI6IFsKICAgICAgICB7CiAgICAgICAgICAiZnVuY3Rpb24iOiAic3VtbWFyeSIsCiAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgInZlcnNpb24iCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiZnVuY3Rpb24iOiAic3VtbWFyeSIsCiAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgImFnZW50cyIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAiZ2V0X2NvbmZpZ19pdGVtIiwKICAgICAgImlucHV0IjogewogICAgICAgICJpdGVtIjogewogICAgICAgICAgInByb21wdCI6ICJDb25maWd1cmF0aW9uIEl0ZW0iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBpdGVtIHRvIHJldHJpZXZlIGZyb20gdGhlIHNlcnZlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogZmFsc2UsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeLiskIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiA1MAogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAiaXRlbSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY29uZmlnIHByb3BlcnR5IGJlaW5nIHJldHJpZXZlZCIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJQcm9wZXJ0eSIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9LAogICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmFsdWUgdGhhdCBpcyBpbiB1c2UiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiVmFsdWUiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiR2V0IHRoZSBhY3RpdmUgdmFsdWUgb2YgYSBzcGVjaWZpYyBjb25maWcgcHJvcGVydHkiLAogICAgICAiYWdncmVnYXRlIjogWwogICAgICAgIHsKICAgICAgICAgICJmdW5jdGlvbiI6ICJzdW1tYXJ5IiwKICAgICAgICAgICJhcmdzIjogWwogICAgICAgICAgICAidmFsdWUiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogImdldF9kYXRhIiwKICAgICAgImlucHV0IjogewogICAgICAgICJzb3VyY2UiOiB7CiAgICAgICAgICAicHJvbXB0IjogIkRhdGEgU291cmNlIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZGF0YSBwbHVnaW4gdG8gcmV0cmlldmUgaW5mb3JtYXRpb24gZnJvbSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogZmFsc2UsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeXFx3KyQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDUwCiAgICAgICAgfSwKICAgICAgICAicXVlcnkiOiB7CiAgICAgICAgICAicHJvbXB0IjogIlF1ZXJ5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcXVlcnkgYXJndW1lbnQgdG8gc3VwcGx5IHRvIHRoZSBkYXRhIHBsdWdpbiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgICJ2YWxpZGF0aW9uIjogIl4uKyQiLAogICAgICAgICAgIm1heGxlbmd0aCI6IDIwMAogICAgICAgIH0KICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkdldCBkYXRhIGZyb20gYSBkYXRhIHBsdWdpbiIKICAgIH0sCiAgICB7CiAgICAgICJhY3Rpb24iOiAiZ2V0X2ZhY3QiLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgImZhY3QiOiB7CiAgICAgICAgICAicHJvbXB0IjogIlRoZSBuYW1lIG9mIHRoZSBmYWN0IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZmFjdCB0byByZXRyaWV2ZSIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICAgICAgIm9wdGlvbmFsIjogZmFsc2UsCiAgICAgICAgICAidmFsaWRhdGlvbiI6ICJeW1xcd1xcLVxcLl0rJCIsCiAgICAgICAgICAibWF4bGVuZ3RoIjogNDAKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgImZhY3QiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGZhY3QgYmVpbmcgcmV0dXJuZWQiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiRmFjdCIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9LAogICAgICAgICJ2YWx1ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmFsdWUgb2YgdGhlIGZhY3QiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiVmFsdWUiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmV0cmlldmUgYSBzaW5nbGUgZmFjdCBmcm9tIHRoZSBmYWN0IHN0b3JlIiwKICAgICAgImFnZ3JlZ2F0ZSI6IFsKICAgICAgICB7CiAgICAgICAgICAiZnVuY3Rpb24iOiAic3VtbWFyeSIsCiAgICAgICAgICAiYXJncyI6IFsKICAgICAgICAgICAgInZhbHVlIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImFjdGlvbiI6ICJnZXRfZmFjdHMiLAogICAgICAiaW5wdXQiOiB7CiAgICAgICAgImZhY3RzIjogewogICAgICAgICAgInByb21wdCI6ICJDb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBmYWN0cyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmFjdHMgdG8gcmV0cmlldmUiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbCwKICAgICAgICAgICJvcHRpb25hbCI6IGZhbHNlLAogICAgICAgICAgInZhbGlkYXRpb24iOiAiXlxccypbXFx3XFwuXFwtXSsoXFxzKixcXHMqW1xcd1xcLlxcLV0rKSokIiwKICAgICAgICAgICJtYXhsZW5ndGgiOiAyMDAKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgInZhbHVlcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJMaXN0IG9mIHZhbHVlcyBvZiB0aGUgZmFjdHMiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiVmFsdWVzIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlJldHJpZXZlIG11bHRpcGxlIGZhY3RzIGZyb20gdGhlIGZhY3Qgc3RvcmUiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogImludmVudG9yeSIsCiAgICAgICJpbnB1dCI6IHsKICAgICAgfSwKICAgICAgIm91dHB1dCI6IHsKICAgICAgICAiYWdlbnRzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgYWdlbnQgbmFtZXMiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiQWdlbnRzIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgImZhY3RzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgZmFjdHMgYW5kIHZhbHVlcyIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJGYWN0cyIsCiAgICAgICAgICAiZGVmYXVsdCI6IG51bGwKICAgICAgICB9LAogICAgICAgICJjbGFzc2VzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgY2xhc3NlcyBvbiB0aGUgc3lzdGVtIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIkNsYXNzZXMiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAidmVyc2lvbiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJNQ29sbGVjdGl2ZSBWZXJzaW9uIiwKICAgICAgICAgICJkaXNwbGF5X2FzIjogIlZlcnNpb24iLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAibWFpbl9jb2xsZWN0aXZlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYWluIENvbGxlY3RpdmUiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiTWFpbiBDb2xsZWN0aXZlIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0sCiAgICAgICAgImNvbGxlY3RpdmVzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkFsbCBDb2xsZWN0aXZlcyIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJBbGwgQ29sbGVjdGl2ZXMiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfSwKICAgICAgICAiZGF0YV9wbHVnaW5zIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkxpc3Qgb2YgZGF0YSBwbHVnaW4gbmFtZXMiLAogICAgICAgICAgImRpc3BsYXlfYXMiOiAiRGF0YSBQbHVnaW5zIiwKICAgICAgICAgICJkZWZhdWx0IjogbnVsbAogICAgICAgIH0KICAgICAgfSwKICAgICAgImRpc3BsYXkiOiAiYWx3YXlzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlN5c3RlbSBJbnZlbnRvcnkiCiAgICB9LAogICAgewogICAgICAiYWN0aW9uIjogInBpbmciLAogICAgICAiaW5wdXQiOiB7CiAgICAgIH0sCiAgICAgICJvdXRwdXQiOiB7CiAgICAgICAgInBvbmciOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxvY2FsIHRpbWVzdGFtcCIsCiAgICAgICAgICAiZGlzcGxheV9hcyI6ICJUaW1lc3RhbXAiLAogICAgICAgICAgImRlZmF1bHQiOiBudWxsCiAgICAgICAgfQogICAgICB9LAogICAgICAiZGlzcGxheSI6ICJhbHdheXMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVzcG9uZHMgdG8gcmVxdWVzdHMgZm9yIFBJTkcgd2l0aCBQT05HIgogICAgfQogIF0KfQ==`

// DDL is the agent DDL
var DDL = make(map[string]*addl.DDL)

func init() {
	DDL["choria_provision"] = &addl.DDL{}
	DDL["rpcutil"] = &addl.DDL{}

	ddl, _ := base64.StdEncoding.DecodeString(provddl)
	json.Unmarshal(ddl, DDL["choria_provision"])

	ddl, _ = base64.StdEncoding.DecodeString(rpcuddl)
	json.Unmarshal(ddl, DDL["rpcutil"])
}
